// Generated by CoffeeScript 1.3.3
(function() {

  ig.module('game.entities.gates.moneyGate').requires('game.entities.gates.gate', 'game.entities.gui.openLevel').defines(function() {
    return window.EntityMoneyGate = EntityGate.extend({
      gateType: 'money',
      amount: 1,
      id: null,
      paid: null,
      init: function(x, y, settings) {
        this.animSheet = new ig.AnimationSheet('media/tileset.png', this.spriteSize.x, this.spriteSize.y);
        this.parent(x, y, settings);
        this.addAnim('idle', 1, [0]);
        return this.id = this.difficulty;
      },
      killIfAlreadyPaid: function() {
        if (ig.game.storage.isSet("money" + this.id)) {
          return this.kill();
        } else {
          return this.paid = false;
        }
      },
      makeChallenge: function() {
        this.parent();
        this["interface"] = ig.game.spawnEntity(EntityOpenLevel, null, null, {
          amount: this.amount
        });
        return this["interface"].delegate = this;
      },
      makeQuestion: function() {},
      reward: function() {
        ig.game.stats.money -= this.amount;
        ig.game.storage.set("money" + this.id);
        ig.game.save();
        return this.kill();
      },
      passable: function() {
        return ig.game.stats.money >= this.amount;
      },
      update: function() {
        if (this.paid === null) {
          this.killIfAlreadyPaid();
        }
        return this.parent();
      },
      yes: function() {
        this.reward();
        return this.resolve();
      },
      no: function() {
        return this.resolve();
      },
      failMessage: function() {
        return "You do not have enough money.  \nCome back when you have $" + this.amount;
      }
    });
  });

}).call(this);
